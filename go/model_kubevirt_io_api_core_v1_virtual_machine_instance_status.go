/*
 * Harvester APIs
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: v1beta1
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package harvester

// VirtualMachineInstanceStatus represents information about the status of a VirtualMachineInstance. Status may trail the actual state of a system.
type KubevirtIoApiCoreV1VirtualMachineInstanceStatus struct {
	// ActivePods is a mapping of pod UID to node name. It is possible for multiple pods to be running for a single VMI during migration.
	ActivePods map[string]string `json:"activePods,omitempty"`
	// Conditions are specific points in VirtualMachineInstance's pod runtime.
	Conditions []KubevirtIoApiCoreV1VirtualMachineInstanceCondition `json:"conditions,omitempty"`
	// EvacuationNodeName is used to track the eviction process of a VMI. It stores the name of the node that we want to evacuate. It is meant to be used by KubeVirt core components only and can't be set or modified by users.
	EvacuationNodeName string `json:"evacuationNodeName,omitempty"`
	// FSFreezeStatus is the state of the fs of the guest it can be either frozen or thawed
	FsFreezeStatus string `json:"fsFreezeStatus,omitempty"`
	// Guest OS Information
	GuestOSInfo *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOsInfo `json:"guestOSInfo,omitempty"`
	// Interfaces represent the details of available network interfaces.
	Interfaces []KubevirtIoApiCoreV1VirtualMachineInstanceNetworkInterface `json:"interfaces,omitempty"`
	// LauncherContainerImageVersion indicates what container image is currently active for the vmi.
	LauncherContainerImageVersion string `json:"launcherContainerImageVersion,omitempty"`
	// Represents the method using which the vmi can be migrated: live migration or block migration
	MigrationMethod string `json:"migrationMethod,omitempty"`
	// Represents the status of a live migration
	MigrationState *KubevirtIoApiCoreV1VirtualMachineInstanceMigrationState `json:"migrationState,omitempty"`
	// This represents the migration transport
	MigrationTransport string `json:"migrationTransport,omitempty"`
	// NodeName is the name where the VirtualMachineInstance is currently running.
	NodeName string `json:"nodeName,omitempty"`
	// Phase is the status of the VirtualMachineInstance in kubernetes world. It is not the VirtualMachineInstance status, but partially correlates to it.
	Phase string `json:"phase,omitempty"`
	// PhaseTransitionTimestamp is the timestamp of when the last phase change occurred
	PhaseTransitionTimestamps []KubevirtIoApiCoreV1VirtualMachineInstancePhaseTransitionTimestamp `json:"phaseTransitionTimestamps,omitempty"`
	// The Quality of Service (QOS) classification assigned to the virtual machine instance based on resource requirements See PodQOSClass type for available QOS classes More info: https://git.k8s.io/community/contributors/design-proposals/node/resource-qos.md
	QosClass string `json:"qosClass,omitempty"`
	// A brief CamelCase message indicating details about why the VMI is in this state. e.g. 'NodeUnresponsive'
	Reason string `json:"reason,omitempty"`
	// RuntimeUser is used to determine what user will be used in launcher
	RuntimeUser int64 `json:"runtimeUser,omitempty"`
	TopologyHints *KubevirtIoApiCoreV1TopologyHints `json:"topologyHints,omitempty"`
	// VirtualMachineRevisionName is used to get the vm revision of the vmi when doing an online vm snapshot
	VirtualMachineRevisionName string `json:"virtualMachineRevisionName,omitempty"`
	// VolumeStatus contains the statuses of all the volumes
	VolumeStatus []KubevirtIoApiCoreV1VolumeStatus `json:"volumeStatus,omitempty"`
}
